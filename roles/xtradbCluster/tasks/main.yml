---
# This playbook will install a Percona XtraDB Cluster

# Pull in variables based on client OS. 
# include_vars - loads YAML/JSON variables dynamically from a file/dir, recursivley during task runtime.
# https://ansible-tips-and-tricks.readthedocs.io/en/latest/os-dependent-tasks/variables/
- name: "Include {{ ansible_distribution }} variables"
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
  tags: install

- name: Checking if XtraDB cluster is already configured
  stat:
    path: "{{ xtradb_configured }}"
  register: "_xtradb_configured"
  tags: install

- name: Cheking if XtraDB cluster is already secured
  stat:
    path: "{{ xtradb_secured }}"
  register: "_xtradb_secured"
  tags: install

- name: Cheking if XtraDB cluster is already configured with the password
  stat:
    path: "{{ xtradb_password_changed }}"
  register: "_xtradb_password_changed"
  tags: install

# Include the Debian.yml task wich sets up the Percona repo
- name: "Include {{ ansible_distribution }} tasks"
  include_tasks: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
  tags: install

## Install Percona packages
- name: Install packages
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ xtradb_packages }}"
  tags: install

- name: Ensure service is started
  service:
    name: "{{ xtradb_service }}"
    state: started
    enabled: true
  tags: install
  when:
    - not _xtradb_secured.stat.exists

- debug:
    var: _xtradb_secured

- name: include secure tasks
  import_tasks: secure_install.yml
  tags: install
  when:
    - not _xtradb_secured.stat.exists

- name: include bootstrap tasks
  import_tasks: bootstrap.yml
  tags: configure
  when:
    - (not _xtradb_configured.stat.exists) and
      (not xtradb_tls_enabled)

- name: include postinstall tasks
  import_tasks: postinstall.yml
  tags: configure
  when:
    - xtradb_bind_address == xtradb_master_node